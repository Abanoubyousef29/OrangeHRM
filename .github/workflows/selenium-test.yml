name: Maven Build and Test

on:
  push:
    branches:
      - master  # Trigger on push to the master branch
  pull_request:
    branches:
      - master  # Trigger on pull requests targeting the master branch

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: 'x64'

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https software-properties-common
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version

      - name: Install ChromeDriver
        run: |
          CHROMEDRIVER_VERSION="98.0.4758.80"  # Replace with a known working version
          wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip || sleep 15 && wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip || sleep 15 && wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip || echo "Failed to download Chromedriver after multiple retries." && exit 1
          unzip chromedriver_linux64.zip
          sudo mv -f chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          chromedriver --version

      - name: Install Firefox
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox
          firefox --version

      - name: Install GeckoDriver
        run: |
          GECKODRIVER_VERSION="0.30.0"  # Replace with a known working version
          wget https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz
          tar -xzf geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/geckodriver
          sudo chmod +x /usr/local/bin/geckodriver
          geckodriver --version

      - name: Install xvfb and xmlstarlet
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb xmlstarlet

      - name: Start xvfb and build with Maven
        run: |
          xvfb-run --auto-servernum mvn clean verify -Dsurefire.reportName=TEST-total

      - name: List contents of target/surefire-reports
        run: |
          ls -l target/surefire-reports

      - name: Display Surefire XML report
        if: always()
        run: |
          echo "Contents of Surefire XML report (testng-results.xml):"
          cat target/surefire-reports/testng-results.xml || echo "Surefire XML report not found."


      - name: Extract test results
        id: extract_results
        run: |
          total_tests=$(xmlstarlet sel -t -v "/testng-results/@total" target/surefire-reports/testng-results.xml)
          failed_tests=$(xmlstarlet sel -t -v "/testng-results/@failed" target/surefire-reports/testng-results.xml)
          skipped_tests=$(xmlstarlet sel -t -v "/testng-results/@skipped" target/surefire-reports/testng-results.xml)
          passed_tests=$(xmlstarlet sel -t -v "/testng-results/@passed" target/surefire-reports/testng-results.xml)
          echo "::set-output name=passed::$passed_tests"
          echo "::set-output name=failed::$failed_tests"
          echo "::set-output name=skipped::$skipped_tests"
          echo "::set-output name=total::$total_tests"

      - name: Display test results summary
        if: always()
        run: |
          echo "Total test cases: ${{ steps.extract_results.outputs.total }}"
          echo "Passed: ${{ steps.extract_results.outputs.passed }}"
          echo "Failed: ${{ steps.extract_results.outputs.failed }}"
          echo "Skipped: ${{ steps.extract_results.outputs.skipped }}"

      - name: Upload Surefire XML report as artifact
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: surefire-reports
          path: target/surefire-reports
